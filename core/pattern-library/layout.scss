$normal-margin: 1.5rem;
$tight-margin: 0.5rem;
$content-max: 120rem;
$text-content-max: 80rem;
$form-element-height: 5rem;

// Per https://zellwk.com/blog/media-query-units/
// In media queries, only em units handle consistently across browsers.
// Safari/iOS behaves differently from others when using rem or px and scaled fonts
// We want the numbers to be in 10-pixel ems, so scale them
$scale-factor: 10 / 16;
$wide-screen-min: 140em * $scale-factor;
$media-content-max: 120em * $scale-factor;
$phone-max: 48em * $scale-factor;
$tablet-max: 96em * $scale-factor;

// Includes the given (min) width
@mixin width-up-to($width) {
    @media (max-width: $width) {
        @content;
    }
}

// Excludes the given (max) width
@mixin wider-than($width) {
    @media (min-width: $width + 0.1) {
        @content;
    }
}

// Includes the max width, excludes the min width
@mixin width-between($width1, $width2) {
    @media (min-width: $width1 + 0.1) and (max-width: $width2) {
        @content;
    }
}

@mixin layout-container($max-width) {
    box-sizing: border-box;
    margin-left: auto;
    margin-right: auto;
    max-width: $max-width;
    padding-left: $normal-margin;
    padding-right: $normal-margin;
    width: 100%;
}

@mixin flex-layout-container($justify: center) {
    display: flex;
    flex: 0 0 100%;
    flex-flow: row wrap;
    justify-content: $justify;
}

@mixin content {
    @include layout-container($content-max);

    %content {
        padding: 0;
    }
}

%content {
    @include content;
}

@mixin text-content {
    @include layout-container($text-content-max);

    %content,
    %text-content {
        padding: 0;
    }
}

%text-content {
    @include text-content;
}

// .basis-# defines a cell in the row
// At phone size, all are 100% width
// At tablet, .basis-2 thru .basis-6 are 50%, others still 100%
// At desktop, .basis-n is n/12 of the row
@mixin bases-with-margin($margin) {
    @for $b from 2 through 12 {
        &%basis-#{$b} {
            @if ($b < 7) {
                @include wider-than($phone-max) {
                    flex-basis: calc(50% - #{$margin});
                }
            }

            @include wider-than($tablet-max) {
                flex-basis: calc(#{100% * $b / 12} + #{$margin * $b / 6 - 2 * $margin});
            }
        }
    }
}

@mixin griditem($margin) {
    display: block;
    margin-left: 0;
    margin-right: 2 * $margin;
    flex-basis: 100%;

    @include bases-with-margin($margin);

    @include width-up-to($phone-max) {
        margin-right: 0;
    }

    @include wider-than($tablet-max) {
        &:last-child {
            margin-right: 0;
        }
    }
}

%griditem {
    @include griditem($normal-margin);

    // If this is in the mixin, it overrides the setting in %form, below
    margin-bottom: 1rem;
}

%tightrow > %griditem {
    @include griditem($tight-margin);
}

@mixin form() {
    @include layout-container($text-content-max);
    @include flex-layout-container();

    background-color: ui-color(form-bg);
    padding: 4rem;

    %griditem {
        margin-bottom: 5rem;
    }
}

%form {
    @include form;
}

// A container that centers content horizontally and vertically
@mixin center() {
    align-items: center;
    display: flex;
    justify-content: center;
    text-align: center;
}
